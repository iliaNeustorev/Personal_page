version: "3.8"
services:
    nginx:
        image: nginx:stable-alpine
        restart: unless-stopped
        tty: true
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - 80:80
        depends_on:
            - app
            - db

    app:
        build:
            context: .
            dockerfile: _docker/app/php.Dockerfile
            network: host
        restart: unless-stopped
        tty: true
        volumes:
            - ./:/var/www

    db:
        image: mysql:8.0
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: prod
            SERVICE_NAME: mysql
        ports:
            - 3306:3306
        volumes:
            - ./tmp/db:/var/lib/mysql

    node:
        build:
            context: .
            dockerfile: _docker/nodejs/node.Dockerfile
            network: host
        tty: true
        ports:
            - "5173:5173"
        volumes:
            - ./:/var/www
            
    composer:
        tty: true
        build:
            context: .
            dockerfile: _docker/composer/composer.Dockerfile
        volumes:
            - ./:/var/www
        networks:
            - default
    artisan:
        build:
            context: .
            dockerfile: _docker/app/php.Dockerfile
        volumes:
            - ./:/var/www
        entrypoint: ["php", "/var/www/artisan"]