version: "3.8"

services:
    nginx:
        image: nginx:stable-alpine
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - 8857:80
        depends_on:
            - app
            - db
            - node

    app:
        build:
            context: .
            dockerfile: _docker/app/php.Dockerfile
        volumes:
            - ./:/var/www
        restart: unless-stopped
        environment:
            - TZ=Europe/Moscow

    db:
        image: mysql:8.0
        volumes:
            - ./tmp/db:/var/lib/mysql
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        ports:
            - 8101:3306

    node:
        build:
            context: .
            dockerfile: _docker/nodejs/node.Dockerfile
        tty: true
        ports:
            - "5173:5173"
        volumes:
            - ./:/var/www
    
    composer:
        build:
            context: .
            dockerfile: _docker/composer/composer.Dockerfile
        volumes:
            - ./:/var/www

    artisan:
        build:
            context: .
            dockerfile: _docker/app/php.Dockerfile
        volumes:
            - ./:/var/www
        entrypoint: ["php", "/var/www/artisan"]

    cleanup:
        image: alpine
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: >
            sh -c "docker container prune -f && docker image prune -f"